Powershell modules


Import-Module C:\Pathtomodule\modulename.psm1

PSModule path
$env:PSModulePath


Copy the module inside the PSModule path 
directly run the command Import-Module name of module      ( no need to enter the path. From Powershell 3.0 onwards there is no need to call Import-Module if the module is inside the PSModule path

copy .\module.ps1 .\module.psm1          (converting a regular script to powershell module)


PS D:\Pentester Academy\powershell> Import-Module .\hotfix.psm1
PS D:\Pentester Academy\powershell> Get-Command -Module hotfix

CommandType     Name                                                Definition
-----------     ----                                                ----------
Function        Show-HotfixStatus                                   ...


PS D:\Pentester Academy\powershell> Show-HotfixStatus

Source        Description      HotFixID      InstalledBy          InstalledOn
------        -----------      --------      -----------          -----------
MY-PC       Update           KB2735855                          9/16/2017 12:00:00 AM





PS C:\Users\asif> Get-Command -CommandType Cmdlet | Where-Object {$_.Parameters.Keys -contains 'ComputerName' -and $_.Pa
rameters.Keys -contains 'Credential' }

CommandType     Name                                                Definition
-----------     ----                                                ----------
Cmdlet          Connect-WSMan                                       Connect-WSMan [[-ComputerName] <String>] [-Appli...
Cmdlet          Enter-PSSession                                     Enter-PSSession [-ComputerName] <String> [-Crede...
Cmdlet          Get-HotFix                                          Get-HotFix [[-Id] <String[]>] [-ComputerName <St...
Cmdlet          Get-WinEvent                                        Get-WinEvent [[-LogName] <String[]>] [-MaxEvents...
Cmdlet          Get-WmiObject                                       Get-WmiObject [-Class] <String> [[-Property] <St...
Cmdlet          Get-WSManInstance                                   Get-WSManInstance [-ResourceURI] <Uri> [-Applica...
Cmdlet          Invoke-Command                                      Invoke-Command [-ScriptBlock] <ScriptBlock> [-In...
Cmdlet          Invoke-WmiMethod                                    Invoke-WmiMethod [-Class] <String> [-Name] <Stri...
Cmdlet          Invoke-WSManAction                                  Invoke-WSManAction [-ResourceURI] <Uri> [-Action...
Cmdlet          New-PSSession                                       New-PSSession [[-ComputerName] <String[]>] [-Cre...
Cmdlet          New-WSManInstance                                   New-WSManInstance [-ResourceURI] <Uri> [-Selecto...
Cmdlet          Register-WmiEvent                                   Register-WmiEvent [-Class] <String> [[-SourceIde...
Cmdlet          Remove-WmiObject                                    Remove-WmiObject [-Class] <String> [-AsJob] [-Im...
Cmdlet          Remove-WSManInstance                                Remove-WSManInstance [-ResourceURI] <Uri> [-Sele...
Cmdlet          Restart-Computer                                    Restart-Computer [[-ComputerName] <String[]>] [[...
Cmdlet          Set-WmiInstance                                     Set-WmiInstance [-Class] <String> [[-Arguments] ...
Cmdlet          Set-WSManInstance                                   Set-WSManInstance [-ResourceURI] <Uri> [[-Select...
Cmdlet          Stop-Computer                                       Stop-Computer [[-ComputerName] <String[]>] [[-Cr...
Cmdlet          Test-Connection                                     Test-Connection [-ComputerName] <String[]> [[-So...
Cmdlet          Test-WSMan                                          Test-WSMan [[-ComputerName] <String>] [-Authenti...



PS C:\Users\asif> Get-Command -CommandType Cmdlet | Where-Object {$_.Parameters.Keys -contains 'ComputerName' -and $_.Pa
rameters.Keys -contains 'Credential' -and $_.Parameters.Keys -notcontains 'Session'}

CommandType     Name                                                Definition
-----------     ----                                                ----------
Cmdlet          Connect-WSMan                                       Connect-WSMan [[-ComputerName] <String>] [-Appli...
Cmdlet          Get-HotFix                                          Get-HotFix [[-Id] <String[]>] [-ComputerName <St...
Cmdlet          Get-WinEvent                                        Get-WinEvent [[-LogName] <String[]>] [-MaxEvents...
Cmdlet          Get-WmiObject                                       Get-WmiObject [-Class] <String> [[-Property] <St...
Cmdlet          Get-WSManInstance                                   Get-WSManInstance [-ResourceURI] <Uri> [-Applica...
Cmdlet          Invoke-WmiMethod                                    Invoke-WmiMethod [-Class] <String> [-Name] <Stri...
Cmdlet          Invoke-WSManAction                                  Invoke-WSManAction [-ResourceURI] <Uri> [-Action...
Cmdlet          New-WSManInstance                                   New-WSManInstance [-ResourceURI] <Uri> [-Selecto...
Cmdlet          Register-WmiEvent                                   Register-WmiEvent [-Class] <String> [[-SourceIde...
Cmdlet          Remove-WmiObject                                    Remove-WmiObject [-Class] <String> [-AsJob] [-Im...
Cmdlet          Remove-WSManInstance                                Remove-WSManInstance [-ResourceURI] <Uri> [-Sele...
Cmdlet          Restart-Computer                                    Restart-Computer [[-ComputerName] <String[]>] [[...
Cmdlet          Set-WmiInstance                                     Set-WmiInstance [-Class] <String> [[-Arguments] ...
Cmdlet          Set-WSManInstance                                   Set-WSManInstance [-ResourceURI] <Uri> [[-Select...
Cmdlet          Stop-Computer                                       Stop-Computer [[-ComputerName] <String[]>] [[-Cr...
Cmdlet          Test-Connection                                     Test-Connection [-ComputerName] <String[]> [[-So...
Cmdlet          Test-WSMan                                          Test-WSMan [[-ComputerName] <String>] [-Authenti...







Get-ExecutionPolicy


PS G:\> function paramadd {$args[0] + $args[1]}
PS G:\> paramadd
PS G:\> paramadd 3 4
7


PS G:\> function multiply ($num1,$num2,$num3){$num1*$num2-$num3}
PS G:\> multiply 3 4 2
10





function Get-ByOwner
 {
   Get-ChildItem -recurse C:\ | get-acl | where {$_.Owner -match $args[0]} 
 }

PS C:\> Get-ByOwner JackFrost



WMI objects

# Computer System
$ComputerSystem = Get-WmiObject -Class Win32_ComputerSystem -ComputerName $ComputerName
# Operating System
$OperatingSystem = Get-WmiObject -Class win32_OperatingSystem -ComputerName $ComputerName
# BIOS
$Bios = Get-WmiObject -class win32_BIOS -ComputerName $ComputerName


Powershell split command 

$filename = "sample.cfg"

Get-Content $filename | ForEach-Object {
    $_.split(":")[1]
}


Getting a list of excel files and printing only the name of the file. 

 Get-ChildItem -File -Name -Recurse |  ForEach-Object {$_.split("\")[1]} >                                                

 
Get-Command -CommandType cmdlet -ParameterName Computername




Imp links:

Good powershell scripts
https://lazywinadmin.com/p/scripts.html

https://github.com/lazywinadmin/PowerShell
https://github.com/nickrod518/PowerShell-Scripts
